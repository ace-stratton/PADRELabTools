# coding: utf-8

"""
    EnduroSat SpaceOps REST API

    Documentation for EnduroSat SpaceOps REST API  # noqa: E501

    The version of the OpenAPI document: 0.34.7
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import endurosat_api
from endurosat_api.models.satellite_pass import SatellitePass  # noqa: E501
from endurosat_api.rest import ApiException

class TestSatellitePass(unittest.TestCase):
    """SatellitePass unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SatellitePass
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = endurosat_api.models.satellite_pass.SatellitePass()  # noqa: E501
        if include_optional :
            return SatellitePass(
                id = '01d11243-af60-46d3-ac8e-d7f4cc3c9104', 
                file_upload_start = 1613865691000, 
                has_file = True, 
                status = 'IN_PROGRESS', 
                satellite = '20ec20b5-8535-4593-be85-6fee2a4dd4ba', 
                ground_station = 'plana', 
                aos = 1613865691000, 
                los = 1613865691000, 
                max_elevation = 85, 
                tle1 = '1 27424U 02022A   21070.88152729  .00000071  00000-0  25714-4 0  9998', 
                tle2 = '2 27424  98.2069  13.6483 0000563 138.8478 314.7089 14.57111273  2829', 
                extra_attributes = None
            )
        else :
            return SatellitePass(
                status = 'IN_PROGRESS',
                satellite = '20ec20b5-8535-4593-be85-6fee2a4dd4ba',
                ground_station = 'plana',
                aos = 1613865691000,
                los = 1613865691000,
                max_elevation = 85,
        )

    def testSatellitePass(self):
        """Test SatellitePass"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
