# coding: utf-8

"""
    EnduroSat SpaceOps REST API

    Documentation for EnduroSat SpaceOps REST API  # noqa: E501

    The version of the OpenAPI document: 0.34.7
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import endurosat_api
from endurosat_api.models.telemetry_entry import TelemetryEntry  # noqa: E501
from endurosat_api.rest import ApiException

class TestTelemetryEntry(unittest.TestCase):
    """TelemetryEntry unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test TelemetryEntry
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = endurosat_api.models.telemetry_entry.TelemetryEntry()  # noqa: E501
        if include_optional :
            return TelemetryEntry(
                id = '01d11243-af60-46d3-ac8e-d7f4cc3c9104', 
                file_upload_start = 1613865691000, 
                has_file = True, 
                name = 'Raise orbit to 501km', 
                mission_database = 'beacons', 
                raw_data = 'SGVsbG8gOik=', 
                data = {"voltage":5}, 
                received_at_timestamp = 1613865691000, 
                satellite_pass = '20ec20b5-8535-4593-be85-6fee2a4dd4ba', 
                satellite = '20ec20b5-8535-4593-be85-6fee2a4dd4ba', 
                satellite_subsystem = '20ec20b5-8535-4593-be85-6fee2a4dd4ba', 
                has_payload_file = True, 
                telecommand_request = '20ec20b5-8535-4593-be85-6fee2a4dd4ba'
            )
        else :
            return TelemetryEntry(
                received_at_timestamp = 1613865691000,
                satellite_pass = '20ec20b5-8535-4593-be85-6fee2a4dd4ba',
                satellite = '20ec20b5-8535-4593-be85-6fee2a4dd4ba',
        )

    def testTelemetryEntry(self):
        """Test TelemetryEntry"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
